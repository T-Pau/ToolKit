bin_directory := $top_source_directory/Toolkit/bin

rule convert-bitmap
    command = {{$bin_directory/convert-bitmap}} -M $depfile $flags -n $name -o $out $in
    depfile = $out.d

rule convert-charset
    command = {{$bin_directory/convert-charset}} -M $depfile $flags -n $name -o $out $in
    depfile = $out.d

rule convert-characters
    command = {{$bin_directory/convert-characters}} -M $depfile $flags -o $out $in
    depfile = $out.d

rule convert-screens
    command = {{$bin_directory/convert-screens}} -M $depfile $flags -o $out $in
    depfile = $out.d

rule convert-sprites
    command = {{$bin_directory/convert-sprites}} -M $depfile $flags -o $out -n $name $in
    depfile = $out.d

rule create-disk
    command = {{$bin_directory/create-disk}} -M $depfile $flags -o $out $in
    depfile = $out.d

rule create-disk-dyndep
    command = {{$bin_directory/create-disk}} $flags -o $output --built-files $top_build_directory/built-files --dyndep $out $in

rule create-zip
    command = {{$bin_directory/create-zip}} -M $depfile $flags -o $out $in
    depfile = $out.d

rule create-zip-dyndep
    command = {{$bin_directory/create-zip}} $flags -o $output --built-files $top_build_directory/built-files --dyndep $out $in

rule convert-image
    command = {{$bin_directory/convert-image}} -M $depfile $flags -o $out $in
    depfile = $out.d

rule encode-colors
    command = {{$bin_directory/encode-colors}} -M $depfile $flags -o $out $in
    depfile = $out.d

rule parallel-struct
    command = {{$bin_directory/parallel-struct}} -M $depfile -o $out $in
    depfile = $out.d
